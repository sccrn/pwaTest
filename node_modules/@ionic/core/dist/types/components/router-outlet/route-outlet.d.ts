import '../../stencil.core';
import { EventEmitter } from '../../stencil.core';
import { NavDirection } from '../nav/nav-util';
import { AnimationBuilder, ComponentProps, ComponentRef, Config, FrameworkDelegate, NavOutlet } from '../..';
import { RouteID, RouteWrite } from '../router/utils/interfaces';
export declare class RouterOutlet implements NavOutlet {
    private isTransitioning;
    private activeEl;
    private activeComponent;
    mode: string;
    el: HTMLElement;
    config: Config;
    animationCtrl: HTMLIonAnimationControllerElement;
    animated: boolean;
    animationBuilder: AnimationBuilder;
    delegate: FrameworkDelegate;
    ionNavWillChange: EventEmitter<void>;
    ionNavDidChange: EventEmitter<void>;
    componentWillLoad(): void;
    componentDidUnload(): void;
    setRoot(component: ComponentRef, params?: ComponentProps, opts?: RouterOutletOptions): Promise<boolean>;
    commit(enteringEl: HTMLElement, leavingEl: HTMLElement, opts?: RouterOutletOptions): Promise<boolean>;
    setRouteId(id: string, params: any, direction: number): Promise<RouteWrite>;
    getRouteId(): RouteID | undefined;
    private getAnimationBuilder(opts);
    render(): JSX.Element[];
}
export interface RouterOutletOptions {
    animationBuilder?: AnimationBuilder;
    duration?: number;
    easing?: string;
    showGoBack?: boolean;
    direction?: NavDirection;
    deepWait?: boolean;
    mode?: 'md' | 'ios';
}
