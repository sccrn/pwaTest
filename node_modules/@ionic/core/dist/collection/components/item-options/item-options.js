import { isRightSide } from '../../utils/helpers';
export class ItemOptions {
    constructor() {
        /**
         * The side the option button should be on. Defaults to `"right"`.
         * If you have multiple `ion-item-options`, a side must be provided for each.
         */
        this.side = 'right';
    }
    isRightSide() {
        return isRightSide(this.side, true);
    }
    width() {
        return this.el.offsetWidth;
    }
    fireSwipeEvent(value) {
        this.ionSwipe.emit(value);
    }
    hostData() {
        return {
            class: {
                'item-options-left': !this.isRightSide(),
                'item-options-right': this.isRightSide()
            }
        };
    }
    static get is() { return "ion-item-options"; }
    static get properties() { return { "el": { "elementRef": true }, "fireSwipeEvent": { "method": true }, "isRightSide": { "method": true }, "side": { "type": "Any", "attr": "side" }, "width": { "method": true } }; }
    static get events() { return [{ "name": "ionSwipe", "method": "ionSwipe", "bubbles": true, "cancelable": true, "composed": true }]; }
    static get style() { return "/**style-placeholder:ion-item-options:**/"; }
    static get styleMode() { return "/**style-id-placeholder:ion-item-options:**/"; }
}
