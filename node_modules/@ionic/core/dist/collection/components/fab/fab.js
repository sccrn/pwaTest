export class Fab {
    constructor() {
        this.activated = false;
        this.toggleActive = () => {
            this.activated = !this.activated;
        };
    }
    /**
     * Close an active FAB list container
     */
    close() {
        this.activated = false;
    }
    hostData() {
        return {
            class: {
                [`fab-horizontal-${this.horizontal}`]: this.horizontal,
                [`fab-vertical-${this.vertical}`]: this.vertical,
                ['fab-edge']: this.edge
            }
        };
    }
    render() {
        const fab = this.el.querySelector('ion-fab-button');
        if (fab) {
            fab.toggleActive = this.toggleActive;
            fab.activated = this.activated;
        }
        const lists = this.el.querySelectorAll('ion-fab-list');
        for (let i = 0, length = lists.length; i < length; i += 1) {
            lists[i].activated = this.activated;
        }
        return (h("slot", null));
    }
    static get is() { return "ion-fab"; }
    static get properties() { return { "activated": { "state": true }, "close": { "method": true }, "edge": { "type": Boolean, "attr": "edge" }, "el": { "elementRef": true }, "horizontal": { "type": "Any", "attr": "horizontal" }, "vertical": { "type": "Any", "attr": "vertical" } }; }
    static get style() { return "/**style-placeholder:ion-fab:**/"; }
}
